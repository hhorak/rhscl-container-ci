# Can be started only by [<MAKE TARGET>] in PR comment
#
# parameters:
#   name: software collection name with namespace, e.g. httpd24-rh
#   release: version of CentOS to test, e.g. 6
#   arch: architecture of CentOS to test, e.g. x86_64
#   gituser: name of github user or organization
#   gitproject: name of a repository to test
#   target: make target to run
- job-template:
    name: 'SCLo-container-{name}-{target}'
    node: sclo-sig
    scm:
        - images-pull-test:
            gituser: '{gituser}'
            gitproject: '{gitproject}'
    triggers:
        - github-pr-target:
            context: 'CentOS{release} make {target}'
            trigger-phrase: '.*\[{target}\].*'
    builders:
        - add_dependencies_remote:
            name: '{name}'
        - shell: |
            cico node get -f value --retry-count 5 --retry-interval 60 --arch {arch} --release {release} --count 1 --api-key $(cat ~/duffy.key) | tee cico.out
            tail -n 1 cico.out | cut -d ' ' -f 7 > ssid
            tail -n 1 cico.out | cut -d ' ' -f 2 > host
        - generate_ssh_config
        - shell: |
            #!/bin/bash
            set -ex

            # Prepare docker
            ssh -F ssh_config host yum -y install docker perl git centos-release-scl-rh rsync golang-github-cpuguy83-go-md2man groff-base
            ssh -F ssh_config host yum -y install source-to-image python27-python-virtualenv
            # Install docker-squash
            ssh -F ssh_config host 'scl enable python27 -- virtualenv --python /usr/bin/python /usr/local/docker-squash && . /usr/local/docker-squash/bin/activate && pip install "docker-squash==1.0.5"'
            # Configure docker for OpenShift and flush IPtables before starting
            ssh -F ssh_config host 'sed -i -e "s|# INSECURE_REGISTRY.*|INSECURE_REGISTRY=\"--insecure-registry 172.30.0.0/16\"|" /etc/sysconfig/docker; iptables -F'
            ssh -F ssh_config host service docker start
            # Enable sudo for ssh (required by test cases)
            ssh -F ssh_config host 'sed -i -e "s|Defaults    requiretty||" /etc/sudoers'
            # Copy sources and prepare shared sources (build scripts)
            rsync -avzP -e 'ssh -F ssh_config' $(pwd)/ host:sources
            ssh -F ssh_config host 'cd sources && git submodule update --init'
            # Run make for base image and for each dependent image
            ssh -F ssh_config host 'set -ex; setenforce 0; . /usr/local/docker-squash/bin/activate; \
              cd sources; make {target} SKIP_SQUASH=1 UPDATE_BASE=1 TAG_ON_SUCCESS=true; \
              for remote in $(git remote | grep test_); do \
                echo "Testing ${{remote#test_}}/master"; \
                git checkout $remote/master; \
                git submodule update --init; \
                make {target} SKIP_SQUASH=1; \
              done'
    publishers:
        - cico_done
